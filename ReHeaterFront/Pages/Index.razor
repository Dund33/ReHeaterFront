@page "/"
@using System.Net.Http
@using System.Web
@using System.Globalization
@inject HttpClient Client

<style>
    .slidecontainer {
      width: 100%; /* Width of the outside container */
    }
    
    /* The slider itself */
    .slider {
      -webkit-appearance: none;  /* Override default CSS styles */
      appearance: none;
      width: 100%; /* Full-width */
      height: 25px; /* Specified height */
      background: #d3d3d3; /* Grey background */
      outline: none; /* Remove outline */
      opacity: 0.7; /* Set transparency (for mouse-over effects on hover) */
      -webkit-transition: .2s; /* 0.2 seconds transition on hover */
      transition: opacity .2s;
    }
    
    /* Mouse-over effects */
    .slider:hover {
      opacity: 1; /* Fully shown on mouse-over */
    }
    
    /* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */ 
    .slider::-webkit-slider-thumb {
      -webkit-appearance: none; /* Override default look */
      appearance: none;
      width: 25px; /* Set a specific slider handle width */
      height: 25px; /* Slider handle height */
      background: #4CAF50; /* Green background */
      cursor: pointer; /* Cursor on hover */
    }
    
    .slider::-moz-range-thumb {
      width: 25px; /* Set a specific slider handle width */
      height: 25px; /* Slider handle height */
      background: #4CAF50; /* Green background */
      cursor: pointer; /* Cursor on hover */
    }
</style>
<h1>Hello, world!</h1>

Welcome to your new app.

<div class="slidecontainer">
    <input @bind="HeaterPower" type="range" min="1" max="10000" step="1" class="slider" id="power">
    Heater power @HeaterPower
    <input @bind="Area" type="range" min="1" max="1000" step="1" class="slider" id="area">
    @Area
    <input @bind="TargetTemp" type="range" min="1" max="50" step="1" class="slider" id="targetTemp">
    @TargetTemp
    <input @bind="OutsideTemp" type="range" min="1" max="50" step="1" class="slider" id="outsideTemp">
    @OutsideTemp
    <input @bind="StartTemp" type="range" min="1" max="50" step="1" class="slider" id="startTemp">
    @StartTemp

</div>

<div>
  current power is @HeaterPower.ToString() Watts
  <button @onclick="SendDataToAPI">Predict </button>
  Predicted setting is @PredictedSetting
</div>

@code{

    public async Task SendDataToAPI()
    {
        var request = new HttpRequestMessage();
        var builder = new UriBuilder("https://192.168.1.165/api/Temperature");
        builder.Port = 5001;
        var query = HttpUtility.ParseQueryString(builder.Query);
        query["roomArea"] = Convert.ToString(Area, CultureInfo.InvariantCulture);
        query["targetTemp"] = Convert.ToString(TargetTemp, CultureInfo.InvariantCulture);
        query["roomId"] = "0";
        query["outsideTemp"] = OutsideTemp.ToString();
        query["startTemp"] = StartTemp.ToString();
        builder.Query = query.ToString();
        var url = builder.ToString();
        Console.WriteLine(url);
        var response = await Client.GetAsync(url);
        var respString = await response.Content.ReadAsStringAsync();
        Console.WriteLine(respString);
        var res = Convert.ToDouble(respString, CultureInfo.InvariantCulture);
        Console.WriteLine(res);
        PredictedSetting = res;
    }

    private float HeaterPower { get; set; }
    public float Area { get; set; }
    public float OutsideTemp { get; set; }
    public float TargetTemp { get; set; }
    public double PredictedSetting { get; set; }
    public float StartTemp { get; set; }
}